package ThreeStateDualFGS
public

system FG
features
InPort: in data port;
OutPort: out data port;
annex emv2 {**
	use types FGSErrorModelLibrary;
  use behavior FGSErrorModelLibrary::Simple;        
	error propagations
	OutPort: out propagation {NoValue};
	end propagations;
	
component error behavior
    propagations  
       Failed-[]->Outport{NoValue};
   end component; 
	**};
end FG;
system AP
features
InPort: in data port;
OutPort: out data port;
annex emv2 {**
	use types FGSErrorModelLibrary;
  use behavior FGSErrorModelLibrary::Simple;        
	error propagations
	InPort: in propagation {NoValue};
	OutPort: out propagation {NoValue};
	end propagations;
	
component error behavior
    propagations  
      Failed-[]->Outport{NoValue};
      Operational -[Inport{NoValue}]-> OutPort{NoValue};
   end component; 
	**};
end AP;


system AC
features
FromAP1Port: in data port;
FromAP2Port: in data port;
OutPort: out data port;
requires modes
  Critical: mode;
  NonCritical: initial mode;
annex emv2 {**
  use types FGSErrorModelLibrary;
  use behavior FGSErrorModelLibrary::ThreeStateAC; 
  error propagations
      FromAP1Port: in propagation {NoValue};
      FromAP2Port: in propagation {NoValue};
      OutPort: out propagation {NoValue};
   end propagations;
	
component error behavior
propagations  
  Failed-[]->Outport{NoValue};
  OperationalNonCritical -[FromAP1Port{NoValue} and FromAP2Port{NoValue}]-> OutPort{NoValue};
  OperationalCritical -[FromAP1Port{NoValue} or FromAP2Port{NoValue}]-> OutPort{NoValue};
  
mode mappings
  OperationalNonCritical in modes (noncritical);
  OperationalCritical in modes (critical);
end component;
**};
end AC;

system FGS
features
inport : in data port;
outport: out data port;
goCritical: in event port;
goNonCritical: in event port;
powersupply : requires bus access PowerSupply;
annex emv2 {**
  use types FGSErrorModelLibrary;
  use behavior FGSErrorModelLibrary::ThreeState;
  error propagations
	inport: in propagation {NoValue};
	outport : out propagation {NoValue};
	powersupply: in propagation {NoService};
  flows
	esource: error source outport{NoValue} when CriticalModefailure;
	ePath: error path inport{NoValue} -> outport{NoValue};
	epPower: error path powersupply{NoService} -> outport{NoValue};
	end propagations;
	**};
end FGS;

system implementation FGS.threestate
subcomponents
AP1: system AP;
AP2: system AP;
FG1: system FG;
FG2: system FG;
AC: system AC;
connections
FGStoFG1: port inport -> FG1.inport;
FGStoFG2: port inport -> FG2.inport;
FG1toAP1: port FG1.outport -> AP1.inport;
FG2toAP2: port FG1.outport -> AP2.inport;
AP1toAC: port AP1.outport -> AC.FromAP1Port;
AP2toAC: port AP2.outport -> AC.FromAP2Port;
ACtoFGS: port AC.outport -> outport;

annex emv2 {**
  use types FGSErrorModelLibrary;        
  use behavior FGSErrorModelLibrary::ThreeState;
composite error behavior 
 states
    [AP1.Operational and AP2.Operational and FG1.Operational and FG2.Operational 
    	  and AC.OperationalCritical]->Operational ;
    [((AP1.Operational and AP2.Operational) or (FG1.Operational and FG2.Operational)) 
    	  and AC.OperationalNonCritical]->Operational ;
    [AC.Failed or 1 ormore (FG1.Failed, AP1.Failed) and 1 ormore (FG2.Failed, AP2.Failed) ]-> NoncriticalModeFailure;
    [1 ormore (AC.Failed, AC.OperationalNonCritical, AP1.Failed, FG1.Failed, AP1.Failed, FG2.Failed)]->CriticalModefailure ;
end composite;
**};
end FGS.threestate;


bus PowerSupply
annex emv2 {**
	use types FGSErrorModelLibrary;
  use behavior FGSErrorModelLibrary::Simple;        
	error propagations
	access: out propagation {NoService};
	flows
	esource: error source access{NoService} when Failed;
	end propagations;
	
component error behavior
    propagations  
      Failed-[]->access{NoService};
   end component; 
	**};
end PowerSupply;

bus EtherSwitch
annex emv2 {**
	use types FGSErrorModelLibrary;
  use behavior FGSErrorModelLibrary::Simple;        
	error propagations
	bindings: out propagation {NoService};
	flows
	esource: error source bindings{NoService} when Failed;
	end propagations;
	
component error behavior
    propagations  
      Failed-[]->bindings{NoService};
   end component; 
	**};
end EtherSwitch;

end ThreeStateDualFGS;