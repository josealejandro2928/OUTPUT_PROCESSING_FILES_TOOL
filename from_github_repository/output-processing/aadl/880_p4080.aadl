package p4080

--
--  This is a model of the P4080 processor made by FreeScale
--  The description and datasheet is available on
--  http://www.freescale.com/webapp/sps/site/prod_summary.jsp?code=P4080
--

--  Different models are proposed:
--  	* A regular model with the processor and its memories
--		* A model with the error-model that also contains the fault description
--

public

with Processor_Properties;
with Multi_Core_Cache;

bus ram_bus
end ram_bus;

--
--  The bus to share the L3 cache among cores
--
bus l3cachebus extends Multi_Core_Cache::cpubus
end l3cachebus;

--
--  The L3 memory to be shared among cores.
--
memory l3cache extends Multi_Core_Cache::cache
features
	sysbus : requires bus access l3cachebus;
end l3cache;

--
--  The e500mc component represents a core of the SoC
--  In total, the processor has eight cores.
--
processor e500mc
features
	l3access 	: requires bus access l3cachebus;
	ram_bus 	: requires bus access ram_bus;
	temp_alert 	: in event port;
modes
	Nominal 	: initial mode;
	Degraded 	: mode;
properties
	Processor_Properties::Speed => [Freq => 0.0 Mhz .. 750.0 MHz; Kind => (FREQ);] in modes (Degraded);
	Processor_Properties::Speed => [Freq => 0.0 Mhz .. 1.5 GHz; Kind => (FREQ);] in modes (Nominal);
	Processor_Properties::Processor_Family => ARM;
end e500mc;

processor implementation e500mc.generic
subcomponents
	--  Each core has 32K dcache and icache
	--  and 128kB L2 cache
	--  See specs page 71 for details.
	dcache  : memory Multi_Core_Cache::cache {Byte_Count => 32_000;};
	icache  : memory Multi_Core_Cache::cache {Byte_Count => 32_000;}; 
	l2cache : memory Multi_Core_Cache::cache {Byte_Count => 128_000;};
end e500mc.generic;   


memory ram
features
	ram_bus : requires bus access ram_bus;
end ram;

memory implementation ram.generic
end ram.generic;

--------------------------------------------------------------
--  First version of the component: the regular, without
--  any fault description.
--  This component represents the main SoC processor
--  with its eight cores.
--------------------------------------------------------------
system p4080
features
	ram_bus : provides bus access ram_bus;
modes
	Nominal 	: initial mode;
	Degraded 	: mode;
end p4080;
 
system implementation p4080.i
subcomponents
	core1 	: processor 	e500mc.generic;
	core2 	: processor 	e500mc.generic;
	core3 	: processor 	e500mc.generic;
	core4 	: processor 	e500mc.generic;
	core5 	: processor 	e500mc.generic;
	core6 	: processor 	e500mc.generic;
	core7 	: processor 	e500mc.generic;
	core8 	: processor 	e500mc.generic;
	l3bus 	: bus 			l3cachebus;
	rambus 	: bus 			ram_bus;
	l3mem 	: memory 		l3cache;
connections
	cores2cache1 : bus access core1.l3access <-> l3bus;
	cores2cache2 : bus access core2.l3access <-> l3bus;
	cores2cache3 : bus access core3.l3access <-> l3bus;
	cores2cache4 : bus access core4.l3access <-> l3bus;
	cores2cache5 : bus access core5.l3access <-> l3bus;
	cores2cache6 : bus access core6.l3access <-> l3bus;
	cores2cache7 : bus access core7.l3access <-> l3bus;
	cores2cache8 : bus access core8.l3access <-> l3bus;
	
	cores2ram1   : bus access core1.ram_bus <-> rambus;
	cores2ram2   : bus access core2.ram_bus <-> rambus;
	cores2ram3   : bus access core3.ram_bus <-> rambus;
	cores2ram4   : bus access core4.ram_bus <-> rambus;
	cores2ram5   : bus access core5.ram_bus <-> rambus;
	cores2ram6   : bus access core6.ram_bus <-> rambus;
	cores2ram7   : bus access core7.ram_bus <-> rambus;
	cores2ram8   : bus access core8.ram_bus <-> rambus;
	
	extramaccess : bus access rambus <-> ram_bus;
	
	mem2cache    : bus access l3mem.sysbus <-> l3bus;
properties
	
	Processor_Properties::Power_Dissipe => 20.0 W .. 30.0 W;
	--  See the Power Management specifications on page 98
end p4080.i;



------------------------------------------------------------
--  Second version of the component: the one with
--  the error model
------------------------------------------------------------

--
--  The sensor device capture the temperature sensor that
--  may trigger a switch to the degraded execution mode.
--
device sensor
features
	alert : out event port;
annex EMV2 {**
	use types 		Error_Processor;
	use behavior 	Error_Processor::Simple;
	error propagations
		alert : out propagation {HighTemperature};
	flows
		f2 : error source alert{HighTemperature}; 
	end propagations;
**};
end sensor;

device implementation sensor.temperature
end sensor.temperature;

processor implementation e500mc.error extends e500mc.generic
annex EMV2 {**
	use types 		Error_Processor;
	use behavior 	Error_Processor::Simple;
	error propagations
		temp_alert : in propagation {HighTemperature};
	flows
		f1 : error sink temp_alert{HighTemperature}; 
	end propagations;
	
	component error behavior
	transitions
		--  When the HighTemperature error is triggered, we
		--  fall in the Degraded Mode
		t1: Operational -[temp_alert{HighTemperature}]-> Degraded;
	mode mappings
		--  Then, we bind the error model to the component mode
		--  so that when we switched to the Degraded mode, we 
		--  also switch the core speed.
		Operational in modes (Nominal);
		Degraded    in modes (Degraded);
	end component;
**};
end e500mc.error;


system implementation p4080.error extends p4080.i
subcomponents
	temperature_sensor 	: device sensor.temperature;
	core1 				: refined to processor e500mc.error;
	core2 				: refined to processor e500mc.error;
	core3 				: refined to processor e500mc.error;
	core4 				: refined to processor e500mc.error;
	core5 				: refined to processor e500mc.error;
	core6 				: refined to processor e500mc.error;
	core7 				: refined to processor e500mc.error;
	core8 				: refined to processor e500mc.error;
connections
	c0 : port temperature_sensor.alert -> core1.temp_alert;
	c1 : port temperature_sensor.alert -> core2.temp_alert;
	c2 : port temperature_sensor.alert -> core3.temp_alert;
	c3 : port temperature_sensor.alert -> core4.temp_alert;
	c4 : port temperature_sensor.alert -> core5.temp_alert;
	c5 : port temperature_sensor.alert -> core6.temp_alert;
	c6 : port temperature_sensor.alert -> core7.temp_alert;
	c7 : port temperature_sensor.alert -> core8.temp_alert;
end p4080.error;


end p4080;