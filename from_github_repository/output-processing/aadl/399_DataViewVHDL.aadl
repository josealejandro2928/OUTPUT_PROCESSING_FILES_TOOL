--------------------------------------------------------
--! File generated by asn2aadl v1.2359: DO NOT EDIT !
--------------------------------------------------------

package DataView

public

-- No more private heap required (we use the space certified compiler)
-- Memory_Required: 0

DATA AType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 10; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AType";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END AType;

DATA AType_Buffer_Max
END AType_Buffer_Max;

DATA IMPLEMENTATION AType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END AType_Buffer_Max.impl;

DATA AType_Buffer
END AType_Buffer;

DATA IMPLEMENTATION AType_Buffer.impl
    -- Buffer to hold a marshalled data of type AType
SUBCOMPONENTS
    Buffer : data AType_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AType_Buffer.impl;

DATA My2ndInt
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndInt";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END My2ndInt;

DATA My2ndInt_Buffer_Max
END My2ndInt_Buffer_Max;

DATA IMPLEMENTATION My2ndInt_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndInt
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndInt_Buffer_Max.impl;

DATA My2ndInt_Buffer
END My2ndInt_Buffer;

DATA IMPLEMENTATION My2ndInt_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndInt
SUBCOMPONENTS
    Buffer : data My2ndInt_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndInt_Buffer.impl;

DATA T_INT
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-INT";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_INT;

DATA T_INT_Buffer_Max
END T_INT_Buffer_Max;

DATA IMPLEMENTATION T_INT_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_INT
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_INT_Buffer_Max.impl;

DATA T_INT_Buffer
END T_INT_Buffer;

DATA IMPLEMENTATION T_INT_Buffer.impl
    -- Buffer to hold a marshalled data of type T_INT
SUBCOMPONENTS
    Buffer : data T_INT_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_INT_Buffer.impl;

DATA T_ARR3
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 336; suggested aligned message buffer is...
    Source_Data_Size => 336 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR3";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR3;

DATA T_ARR3_Buffer_Max
END T_ARR3_Buffer_Max;

DATA IMPLEMENTATION T_ARR3_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR3
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (336); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR3_Buffer_Max.impl;

DATA T_ARR3_Buffer
END T_ARR3_Buffer;

DATA IMPLEMENTATION T_ARR3_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR3
SUBCOMPONENTS
    Buffer : data T_ARR3_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ARR3_Buffer.impl;

DATA T_SET
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SET";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_SET;

DATA T_SET_Buffer_Max
END T_SET_Buffer_Max;

DATA IMPLEMENTATION T_SET_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SET
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_SET_Buffer_Max.impl;

DATA T_SET_Buffer
END T_SET_Buffer;

DATA IMPLEMENTATION T_SET_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SET
SUBCOMPONENTS
    Buffer : data T_SET_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_SET_Buffer.impl;

DATA T_ARR
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 48; suggested aligned message buffer is...
    Source_Data_Size => 48 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR;

DATA T_ARR_Buffer_Max
END T_ARR_Buffer_Max;

DATA IMPLEMENTATION T_ARR_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (48); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR_Buffer_Max.impl;

DATA T_ARR_Buffer
END T_ARR_Buffer;

DATA IMPLEMENTATION T_ARR_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR
SUBCOMPONENTS
    Buffer : data T_ARR_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ARR_Buffer.impl;

DATA TypeEnumerated
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TypeEnumerated";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END TypeEnumerated;

DATA TypeEnumerated_Buffer_Max
END TypeEnumerated_Buffer_Max;

DATA IMPLEMENTATION TypeEnumerated_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TypeEnumerated
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TypeEnumerated_Buffer_Max.impl;

DATA TypeEnumerated_Buffer
END TypeEnumerated_Buffer;

DATA IMPLEMENTATION TypeEnumerated_Buffer.impl
    -- Buffer to hold a marshalled data of type TypeEnumerated
SUBCOMPONENTS
    Buffer : data TypeEnumerated_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TypeEnumerated_Buffer.impl;

DATA T_ARR4
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 336; suggested aligned message buffer is...
    Source_Data_Size => 336 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR4";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR4;

DATA T_ARR4_Buffer_Max
END T_ARR4_Buffer_Max;

DATA IMPLEMENTATION T_ARR4_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR4
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (336); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR4_Buffer_Max.impl;

DATA T_ARR4_Buffer
END T_ARR4_Buffer;

DATA IMPLEMENTATION T_ARR4_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR4
SUBCOMPONENTS
    Buffer : data T_ARR4_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ARR4_Buffer.impl;

DATA T_FIXEDSTRING
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 15; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-FIXEDSTRING";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END T_FIXEDSTRING;

DATA T_FIXEDSTRING_Buffer_Max
END T_FIXEDSTRING_Buffer_Max;

DATA IMPLEMENTATION T_FIXEDSTRING_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_FIXEDSTRING
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_FIXEDSTRING_Buffer_Max.impl;

DATA T_FIXEDSTRING_Buffer
END T_FIXEDSTRING_Buffer;

DATA IMPLEMENTATION T_FIXEDSTRING_Buffer.impl
    -- Buffer to hold a marshalled data of type T_FIXEDSTRING
SUBCOMPONENTS
    Buffer : data T_FIXEDSTRING_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_FIXEDSTRING_Buffer.impl;

DATA TypeNested
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 464; suggested aligned message buffer is...
    Source_Data_Size => 464 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TypeNested";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TypeNested;

DATA TypeNested_Buffer_Max
END TypeNested_Buffer_Max;

DATA IMPLEMENTATION TypeNested_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TypeNested
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (464); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TypeNested_Buffer_Max.impl;

DATA TypeNested_Buffer
END TypeNested_Buffer;

DATA IMPLEMENTATION TypeNested_Buffer.impl
    -- Buffer to hold a marshalled data of type TypeNested
SUBCOMPONENTS
    Buffer : data TypeNested_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TypeNested_Buffer.impl;

DATA T_POS
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 6968; suggested aligned message buffer is...
    Source_Data_Size => 6968 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-POS";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END T_POS;

DATA T_POS_Buffer_Max
END T_POS_Buffer_Max;

DATA IMPLEMENTATION T_POS_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_POS
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (6968); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_POS_Buffer_Max.impl;

DATA T_POS_Buffer
END T_POS_Buffer;

DATA IMPLEMENTATION T_POS_Buffer.impl
    -- Buffer to hold a marshalled data of type T_POS
SUBCOMPONENTS
    Buffer : data T_POS_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_POS_Buffer.impl;

DATA T_BOOL
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-BOOL";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_BOOL;

DATA T_BOOL_Buffer_Max
END T_BOOL_Buffer_Max;

DATA IMPLEMENTATION T_BOOL_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_BOOL
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_BOOL_Buffer_Max.impl;

DATA T_BOOL_Buffer
END T_BOOL_Buffer;

DATA IMPLEMENTATION T_BOOL_Buffer.impl
    -- Buffer to hold a marshalled data of type T_BOOL
SUBCOMPONENTS
    Buffer : data T_BOOL_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_BOOL_Buffer.impl;

DATA T_POS_SET
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 7160; suggested aligned message buffer is...
    Source_Data_Size => 7160 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-POS-SET";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_POS_SET;

DATA T_POS_SET_Buffer_Max
END T_POS_SET_Buffer_Max;

DATA IMPLEMENTATION T_POS_SET_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_POS_SET
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (7160); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_POS_SET_Buffer_Max.impl;

DATA T_POS_SET_Buffer
END T_POS_SET_Buffer;

DATA IMPLEMENTATION T_POS_SET_Buffer.impl
    -- Buffer to hold a marshalled data of type T_POS_SET
SUBCOMPONENTS
    Buffer : data T_POS_SET_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_POS_SET_Buffer.impl;

DATA T_STRING
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 15; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-STRING";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END T_STRING;

DATA T_STRING_Buffer_Max
END T_STRING_Buffer_Max;

DATA IMPLEMENTATION T_STRING_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_STRING
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_STRING_Buffer_Max.impl;

DATA T_STRING_Buffer
END T_STRING_Buffer;

DATA IMPLEMENTATION T_STRING_Buffer.impl
    -- Buffer to hold a marshalled data of type T_STRING
SUBCOMPONENTS
    Buffer : data T_STRING_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_STRING_Buffer.impl;

DATA T_SETOF
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 48; suggested aligned message buffer is...
    Source_Data_Size => 48 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SETOF";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_SETOF;

DATA T_SETOF_Buffer_Max
END T_SETOF_Buffer_Max;

DATA IMPLEMENTATION T_SETOF_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SETOF
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (48); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_SETOF_Buffer_Max.impl;

DATA T_SETOF_Buffer
END T_SETOF_Buffer;

DATA IMPLEMENTATION T_SETOF_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SETOF
SUBCOMPONENTS
    Buffer : data T_SETOF_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_SETOF_Buffer.impl;

DATA MyInt
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInt";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END MyInt;

DATA MyInt_Buffer_Max
END MyInt_Buffer_Max;

DATA IMPLEMENTATION MyInt_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInt
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MyInt_Buffer_Max.impl;

DATA MyInt_Buffer
END MyInt_Buffer;

DATA IMPLEMENTATION MyInt_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInt
SUBCOMPONENTS
    Buffer : data MyInt_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyInt_Buffer.impl;

DATA T_META
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulinkVHDL.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 6968; suggested aligned message buffer is...
    Source_Data_Size => 6968 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-META";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END T_META;

DATA T_META_Buffer_Max
END T_META_Buffer_Max;

DATA IMPLEMENTATION T_META_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_META
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (6968); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_META_Buffer_Max.impl;

DATA T_META_Buffer
END T_META_Buffer;

DATA IMPLEMENTATION T_META_Buffer.impl
    -- Buffer to hold a marshalled data of type T_META
SUBCOMPONENTS
    Buffer : data T_META_Buffer_Max.impl;
    Length : data Base_Types::uint16;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_META_Buffer.impl;

end DataView;
