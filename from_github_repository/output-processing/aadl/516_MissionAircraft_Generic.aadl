--
-- Copyright 2018 Carnegie Mellon University. See Notice.txt
-- Distribution Statement A: Approved for Public Release; Distribution is Unlimited.

--	This is a generic mission-specific aircraft architecture based upon security domains of aircraft control (AC), 
--  missions systems (MS), and communications (Comm) plus  airframe.
--
--

package MissionAircraft_Generic
public
	with AircraftControl_pkg;
	with AircraftAirframe_pkg, AircraftMissionSystems_pkg;
--	with Security_Properties;
	with SecurityClassificationProperties, SecurityEnforcementProperties;
	

system missionAircraft
end missionAircraft;


system implementation missionAircraft.generic
--
-- The mission-specific aircraft is modeled as control and mission systems plus airframe.
	
	subcomponents
		aircraft_control_systems: system AircraftControl_pkg::aircraftControl;
		mission_systems: system AircraftMissionSystems_pkg::AircraftMissionSystems.AquireSecureData;
		airframe: system AircraftAirframe_pkg::airframe.basic;	
		

	properties
		-- Assign Security Properties to Data within mission systems
		SecurityClassificationProperties::Information_Security_Level => TopSecret applies to mission_systems.L1DataStore;
		SecurityClassificationProperties::Information_Security_Level =>  Secret applies to mission_systems.L2DataStore;
		SecurityClassificationProperties::Information_Security_Level =>  Confidential applies to mission_systems.L3DataStore;
		-- Assign Encryption to data within mission systems
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;] applies to mission_systems.L1DataStore;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.L2DataStore;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.L3DataStore;	
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;] ;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to aircraft_control_systems;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to airframe;
		-- 	Assign Encryption to connections
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection1;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection2;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection3;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection4;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection5;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection6;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection7;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection8;
		SecurityEnforcementProperties::Encryption => [encryption_form=> to_be_specified;]  applies to mission_systems.connection9;
		--
		-- test assignments of secret to mission system
		SecurityClassificationProperties::Information_Security_Level => Secret;
		SecurityClassificationProperties::Information_Security_Level => Secret applies to mission_systems;
		
end missionAircraft.generic;



end MissionAircraft_Generic;