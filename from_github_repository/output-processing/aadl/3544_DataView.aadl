--------------------------------------------------------
--! File generated by asn2aadl v2.1.10: DO NOT EDIT !
--------------------------------------------------------
--! InputASN1FileChecksum:7b420c42d10920a0ec0562555c2f02b1:DataTypesSimulink.asn:
--------------------------------------------------------

package DataView

public

DATA T_TypeThatMustNotBeMappedExceptInPython
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 32; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-TypeThatMustNotBeMappedExceptInPython";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_TypeThatMustNotBeMappedExceptInPython;

DATA T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max
END T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max;

DATA IMPLEMENTATION T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_TypeThatMustNotBeMappedExceptInPython
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max.impl;

DATA T_TypeThatMustNotBeMappedExceptInPython_Buffer
END T_TypeThatMustNotBeMappedExceptInPython_Buffer;

DATA IMPLEMENTATION T_TypeThatMustNotBeMappedExceptInPython_Buffer.impl
    -- Buffer to hold a marshalled data of type T_TypeThatMustNotBeMappedExceptInPython
SUBCOMPONENTS
    Buffer : data T_TypeThatMustNotBeMappedExceptInPython_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_TypeThatMustNotBeMappedExceptInPython_Buffer.impl;

DATA T_INT
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-INT";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_INT;

DATA T_INT_Buffer_Max
END T_INT_Buffer_Max;

DATA IMPLEMENTATION T_INT_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_INT
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_INT_Buffer_Max.impl;

DATA T_INT_Buffer
END T_INT_Buffer;

DATA IMPLEMENTATION T_INT_Buffer.impl
    -- Buffer to hold a marshalled data of type T_INT
SUBCOMPONENTS
    Buffer : data T_INT_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_INT_Buffer.impl;

DATA FixedLenConfigString
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 6; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "FixedLenConfigString";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END FixedLenConfigString;

DATA FixedLenConfigString_Buffer_Max
END FixedLenConfigString_Buffer_Max;

DATA IMPLEMENTATION FixedLenConfigString_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type FixedLenConfigString
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END FixedLenConfigString_Buffer_Max.impl;

DATA FixedLenConfigString_Buffer
END FixedLenConfigString_Buffer;

DATA IMPLEMENTATION FixedLenConfigString_Buffer.impl
    -- Buffer to hold a marshalled data of type FixedLenConfigString
SUBCOMPONENTS
    Buffer : data FixedLenConfigString_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END FixedLenConfigString_Buffer.impl;

DATA T_META
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8776; suggested aligned message buffer is...
    Source_Data_Size => 8776 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-META";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END T_META;

DATA T_META_Buffer_Max
END T_META_Buffer_Max;

DATA IMPLEMENTATION T_META_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_META
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8776); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_META_Buffer_Max.impl;

DATA T_META_Buffer
END T_META_Buffer;

DATA IMPLEMENTATION T_META_Buffer.impl
    -- Buffer to hold a marshalled data of type T_META
SUBCOMPONENTS
    Buffer : data T_META_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_META_Buffer.impl;

DATA T_ARR
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR;

DATA T_ARR_Buffer_Max
END T_ARR_Buffer_Max;

DATA IMPLEMENTATION T_ARR_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR_Buffer_Max.impl;

DATA T_ARR_Buffer
END T_ARR_Buffer;

DATA IMPLEMENTATION T_ARR_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR
SUBCOMPONENTS
    Buffer : data T_ARR_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ARR_Buffer.impl;

DATA My2ndAType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 10; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndAType";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END My2ndAType;

DATA My2ndAType_Buffer_Max
END My2ndAType_Buffer_Max;

DATA IMPLEMENTATION My2ndAType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndAType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndAType_Buffer_Max.impl;

DATA My2ndAType_Buffer
END My2ndAType_Buffer;

DATA IMPLEMENTATION My2ndAType_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndAType
SUBCOMPONENTS
    Buffer : data My2ndAType_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndAType_Buffer.impl;

DATA T_ARR2
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 79; suggested aligned message buffer is...
    Source_Data_Size => 80 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR2";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR2;

DATA T_ARR2_Buffer_Max
END T_ARR2_Buffer_Max;

DATA IMPLEMENTATION T_ARR2_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR2
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR2_Buffer_Max.impl;

DATA T_ARR2_Buffer
END T_ARR2_Buffer;

DATA IMPLEMENTATION T_ARR2_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR2
SUBCOMPONENTS
    Buffer : data T_ARR2_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ARR2_Buffer.impl;

DATA T_REAL
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-REAL";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END T_REAL;

DATA T_REAL_Buffer_Max
END T_REAL_Buffer_Max;

DATA IMPLEMENTATION T_REAL_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_REAL
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_REAL_Buffer_Max.impl;

DATA T_REAL_Buffer
END T_REAL_Buffer;

DATA IMPLEMENTATION T_REAL_Buffer.impl
    -- Buffer to hold a marshalled data of type T_REAL
SUBCOMPONENTS
    Buffer : data T_REAL_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_REAL_Buffer.impl;

DATA My2ndArr
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndArr";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END My2ndArr;

DATA My2ndArr_Buffer_Max
END My2ndArr_Buffer_Max;

DATA IMPLEMENTATION My2ndArr_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndArr
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndArr_Buffer_Max.impl;

DATA My2ndArr_Buffer
END My2ndArr_Buffer;

DATA IMPLEMENTATION My2ndArr_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndArr
SUBCOMPONENTS
    Buffer : data My2ndArr_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndArr_Buffer.impl;

DATA My2ndBool
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndBool";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END My2ndBool;

DATA My2ndBool_Buffer_Max
END My2ndBool_Buffer_Max;

DATA IMPLEMENTATION My2ndBool_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndBool
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndBool_Buffer_Max.impl;

DATA My2ndBool_Buffer
END My2ndBool_Buffer;

DATA IMPLEMENTATION My2ndBool_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndBool
SUBCOMPONENTS
    Buffer : data My2ndBool_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndBool_Buffer.impl;

DATA TypeEnumerated
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TypeEnumerated";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END TypeEnumerated;

DATA TypeEnumerated_Buffer_Max
END TypeEnumerated_Buffer_Max;

DATA IMPLEMENTATION TypeEnumerated_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TypeEnumerated
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TypeEnumerated_Buffer_Max.impl;

DATA TypeEnumerated_Buffer
END TypeEnumerated_Buffer;

DATA IMPLEMENTATION TypeEnumerated_Buffer.impl
    -- Buffer to hold a marshalled data of type TypeEnumerated
SUBCOMPONENTS
    Buffer : data TypeEnumerated_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TypeEnumerated_Buffer.impl;

DATA T_POS_SET
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8992; suggested aligned message buffer is...
    Source_Data_Size => 8992 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-POS-SET";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_POS_SET;

DATA T_POS_SET_Buffer_Max
END T_POS_SET_Buffer_Max;

DATA IMPLEMENTATION T_POS_SET_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_POS_SET
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8992); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_POS_SET_Buffer_Max.impl;

DATA T_POS_SET_Buffer
END T_POS_SET_Buffer;

DATA IMPLEMENTATION T_POS_SET_Buffer.impl
    -- Buffer to hold a marshalled data of type T_POS_SET
SUBCOMPONENTS
    Buffer : data T_POS_SET_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_POS_SET_Buffer.impl;

DATA My2ndString
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 20; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndString";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END My2ndString;

DATA My2ndString_Buffer_Max
END My2ndString_Buffer_Max;

DATA IMPLEMENTATION My2ndString_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndString
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndString_Buffer_Max.impl;

DATA My2ndString_Buffer
END My2ndString_Buffer;

DATA IMPLEMENTATION My2ndString_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndString
SUBCOMPONENTS
    Buffer : data My2ndString_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndString_Buffer.impl;

DATA T_ARR3
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 547; suggested aligned message buffer is...
    Source_Data_Size => 552 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR3";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR3;

DATA T_ARR3_Buffer_Max
END T_ARR3_Buffer_Max;

DATA IMPLEMENTATION T_ARR3_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR3
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (552); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR3_Buffer_Max.impl;

DATA T_ARR3_Buffer
END T_ARR3_Buffer;

DATA IMPLEMENTATION T_ARR3_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR3
SUBCOMPONENTS
    Buffer : data T_ARR3_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ARR3_Buffer.impl;

DATA T_FIXEDSTRING
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 15; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-FIXEDSTRING";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END T_FIXEDSTRING;

DATA T_FIXEDSTRING_Buffer_Max
END T_FIXEDSTRING_Buffer_Max;

DATA IMPLEMENTATION T_FIXEDSTRING_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_FIXEDSTRING
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_FIXEDSTRING_Buffer_Max.impl;

DATA T_FIXEDSTRING_Buffer
END T_FIXEDSTRING_Buffer;

DATA IMPLEMENTATION T_FIXEDSTRING_Buffer.impl
    -- Buffer to hold a marshalled data of type T_FIXEDSTRING
SUBCOMPONENTS
    Buffer : data T_FIXEDSTRING_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_FIXEDSTRING_Buffer.impl;

DATA T_ARR4
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 547; suggested aligned message buffer is...
    Source_Data_Size => 552 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-ARR4";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_ARR4;

DATA T_ARR4_Buffer_Max
END T_ARR4_Buffer_Max;

DATA IMPLEMENTATION T_ARR4_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_ARR4
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (552); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_ARR4_Buffer_Max.impl;

DATA T_ARR4_Buffer
END T_ARR4_Buffer;

DATA IMPLEMENTATION T_ARR4_Buffer.impl
    -- Buffer to hold a marshalled data of type T_ARR4
SUBCOMPONENTS
    Buffer : data T_ARR4_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_ARR4_Buffer.impl;

DATA T_BOOL
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-BOOL";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_BOOL;

DATA T_BOOL_Buffer_Max
END T_BOOL_Buffer_Max;

DATA IMPLEMENTATION T_BOOL_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_BOOL
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_BOOL_Buffer_Max.impl;

DATA T_BOOL_Buffer
END T_BOOL_Buffer;

DATA IMPLEMENTATION T_BOOL_Buffer.impl
    -- Buffer to hold a marshalled data of type T_BOOL
SUBCOMPONENTS
    Buffer : data T_BOOL_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_BOOL_Buffer.impl;

DATA TypeNested
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 584; suggested aligned message buffer is...
    Source_Data_Size => 584 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TypeNested";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TypeNested;

DATA TypeNested_Buffer_Max
END TypeNested_Buffer_Max;

DATA IMPLEMENTATION TypeNested_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TypeNested
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (584); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TypeNested_Buffer_Max.impl;

DATA TypeNested_Buffer
END TypeNested_Buffer;

DATA IMPLEMENTATION TypeNested_Buffer.impl
    -- Buffer to hold a marshalled data of type TypeNested
SUBCOMPONENTS
    Buffer : data TypeNested_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END TypeNested_Buffer.impl;

DATA T_SETOF
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SETOF";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END T_SETOF;

DATA T_SETOF_Buffer_Max
END T_SETOF_Buffer_Max;

DATA IMPLEMENTATION T_SETOF_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SETOF
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_SETOF_Buffer_Max.impl;

DATA T_SETOF_Buffer
END T_SETOF_Buffer;

DATA IMPLEMENTATION T_SETOF_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SETOF
SUBCOMPONENTS
    Buffer : data T_SETOF_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_SETOF_Buffer.impl;

DATA AType
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 10; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "AType";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END AType;

DATA AType_Buffer_Max
END AType_Buffer_Max;

DATA IMPLEMENTATION AType_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type AType
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END AType_Buffer_Max.impl;

DATA AType_Buffer
END AType_Buffer;

DATA IMPLEMENTATION AType_Buffer.impl
    -- Buffer to hold a marshalled data of type AType
SUBCOMPONENTS
    Buffer : data AType_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END AType_Buffer.impl;

DATA T_POS
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8776; suggested aligned message buffer is...
    Source_Data_Size => 8776 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-POS";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END T_POS;

DATA T_POS_Buffer_Max
END T_POS_Buffer_Max;

DATA IMPLEMENTATION T_POS_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_POS
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8776); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_POS_Buffer_Max.impl;

DATA T_POS_Buffer
END T_POS_Buffer;

DATA IMPLEMENTATION T_POS_Buffer.impl
    -- Buffer to hold a marshalled data of type T_POS
SUBCOMPONENTS
    Buffer : data T_POS_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_POS_Buffer.impl;

DATA T_SET
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 32; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-SET";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_SET;

DATA T_SET_Buffer_Max
END T_SET_Buffer_Max;

DATA IMPLEMENTATION T_SET_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_SET
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_SET_Buffer_Max.impl;

DATA T_SET_Buffer
END T_SET_Buffer;

DATA IMPLEMENTATION T_SET_Buffer.impl
    -- Buffer to hold a marshalled data of type T_SET
SUBCOMPONENTS
    Buffer : data T_SET_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_SET_Buffer.impl;

DATA ConfigString
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 21; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ConfigString";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END ConfigString;

DATA ConfigString_Buffer_Max
END ConfigString_Buffer_Max;

DATA IMPLEMENTATION ConfigString_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ConfigString
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ConfigString_Buffer_Max.impl;

DATA ConfigString_Buffer
END ConfigString_Buffer;

DATA IMPLEMENTATION ConfigString_Buffer.impl
    -- Buffer to hold a marshalled data of type ConfigString
SUBCOMPONENTS
    Buffer : data ConfigString_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END ConfigString_Buffer.impl;

DATA My2ndReal
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndReal";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END My2ndReal;

DATA My2ndReal_Buffer_Max
END My2ndReal_Buffer_Max;

DATA IMPLEMENTATION My2ndReal_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndReal
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndReal_Buffer_Max.impl;

DATA My2ndReal_Buffer
END My2ndReal_Buffer;

DATA IMPLEMENTATION My2ndReal_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndReal
SUBCOMPONENTS
    Buffer : data My2ndReal_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndReal_Buffer.impl;

DATA My2ndInt
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndInt";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END My2ndInt;

DATA My2ndInt_Buffer_Max
END My2ndInt_Buffer_Max;

DATA IMPLEMENTATION My2ndInt_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndInt
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndInt_Buffer_Max.impl;

DATA My2ndInt_Buffer
END My2ndInt_Buffer;

DATA IMPLEMENTATION My2ndInt_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndInt
SUBCOMPONENTS
    Buffer : data My2ndInt_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndInt_Buffer.impl;

DATA My2ndEnumerated
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndEnumerated";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END My2ndEnumerated;

DATA My2ndEnumerated_Buffer_Max
END My2ndEnumerated_Buffer_Max;

DATA IMPLEMENTATION My2ndEnumerated_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndEnumerated
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndEnumerated_Buffer_Max.impl;

DATA My2ndEnumerated_Buffer
END My2ndEnumerated_Buffer;

DATA IMPLEMENTATION My2ndEnumerated_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndEnumerated
SUBCOMPONENTS
    Buffer : data My2ndEnumerated_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndEnumerated_Buffer.impl;

DATA My2ndTypeNested
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 584; suggested aligned message buffer is...
    Source_Data_Size => 584 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "My2ndTypeNested";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END My2ndTypeNested;

DATA My2ndTypeNested_Buffer_Max
END My2ndTypeNested_Buffer_Max;

DATA IMPLEMENTATION My2ndTypeNested_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type My2ndTypeNested
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (584); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END My2ndTypeNested_Buffer_Max.impl;

DATA My2ndTypeNested_Buffer
END My2ndTypeNested_Buffer;

DATA IMPLEMENTATION My2ndTypeNested_Buffer.impl
    -- Buffer to hold a marshalled data of type My2ndTypeNested
SUBCOMPONENTS
    Buffer : data My2ndTypeNested_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END My2ndTypeNested_Buffer.impl;

DATA MyInt
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MyInt";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END MyInt;

DATA MyInt_Buffer_Max
END MyInt_Buffer_Max;

DATA IMPLEMENTATION MyInt_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MyInt
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MyInt_Buffer_Max.impl;

DATA MyInt_Buffer
END MyInt_Buffer;

DATA IMPLEMENTATION MyInt_Buffer.impl
    -- Buffer to hold a marshalled data of type MyInt
SUBCOMPONENTS
    Buffer : data MyInt_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END MyInt_Buffer.impl;

DATA T_STRING
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataTypesSimulink.asn");
    Ada_Package_Name => "MY_MODULE";
    Source_Language => ASN1;
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 20; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-STRING";
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END T_STRING;

DATA T_STRING_Buffer_Max
END T_STRING_Buffer_Max;

DATA IMPLEMENTATION T_STRING_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_STRING
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_STRING_Buffer_Max.impl;

DATA T_STRING_Buffer
END T_STRING_Buffer;

DATA IMPLEMENTATION T_STRING_Buffer.impl
    -- Buffer to hold a marshalled data of type T_STRING
SUBCOMPONENTS
    Buffer : data T_STRING_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_STRING_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   T_TypeThatMustNotBeMappedExceptInPython : DATA T_TypeThatMustNotBeMappedExceptInPython;
   T_INT : DATA T_INT;
   FixedLenConfigString : DATA FixedLenConfigString;
   T_META : DATA T_META;
   T_ARR : DATA T_ARR;
   My2ndAType : DATA My2ndAType;
   T_ARR2 : DATA T_ARR2;
   T_REAL : DATA T_REAL;
   My2ndArr : DATA My2ndArr;
   My2ndBool : DATA My2ndBool;
   TypeEnumerated : DATA TypeEnumerated;
   T_POS_SET : DATA T_POS_SET;
   My2ndString : DATA My2ndString;
   T_ARR3 : DATA T_ARR3;
   T_FIXEDSTRING : DATA T_FIXEDSTRING;
   T_ARR4 : DATA T_ARR4;
   T_BOOL : DATA T_BOOL;
   TypeNested : DATA TypeNested;
   T_SETOF : DATA T_SETOF;
   AType : DATA AType;
   T_POS : DATA T_POS;
   T_SET : DATA T_SET;
   ConfigString : DATA ConfigString;
   My2ndReal : DATA My2ndReal;
   My2ndInt : DATA My2ndInt;
   My2ndEnumerated : DATA My2ndEnumerated;
   My2ndTypeNested : DATA My2ndTypeNested;
   MyInt : DATA MyInt;
   T_STRING : DATA T_STRING;
END Taste_DataView.others;
end DataView;
