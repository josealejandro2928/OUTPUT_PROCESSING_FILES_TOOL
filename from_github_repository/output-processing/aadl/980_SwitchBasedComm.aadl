package SwitchBasedComm
public 
   with Base_Types;
   with TB_SYS; 
   with Data_Model;

data msg
  properties
    Data_Model::Data_Representation => Struct;
end msg;

data implementation msg.impl
  subcomponents
    toclient : data Base_Types::Integer_32;
    fromclient : data Base_Types::Integer_32;
end msg.impl;

thread switch
	features
		in1: in event data port msg.impl {
	      TB_SYS::Compute_Entrypoint_Source_Text => ("In1");		
		};
		in2: in event data port msg.impl {
	      TB_SYS::Compute_Entrypoint_Source_Text => ("In2");		
		};
		in3: in event data port msg.impl {
	      TB_SYS::Compute_Entrypoint_Source_Text => ("In3");		
		};

		out1: out event data port msg.impl {
	      TB_SYS::CommPrim_Source_Text => "Out1";				
		};
		out2: out event data port msg.impl {
	      TB_SYS::CommPrim_Source_Text => "Out2";			
		};
		out3: out event data port msg.impl {
		  TB_SYS::CommPrim_Source_Text => "Out3";		
		};
		
	properties 
		Source_Text => ("user_code/user_switch.c");
	    Dispatch_Protocol => Aperiodic;
	    TB_SYS::Thread_Type => Passive ;
	    Compute_Execution_Time => 10 us .. 50 us;
	    TB_SYS::Sends_Events_To => "{{1 out1,1 out2,1 out3}}";
end switch ; 


thread client1
	features
		in0 : in event data port msg.impl {
	      TB_SYS::Compute_Entrypoint_Source_Text => ("In");
		};
		out0 : out event data port msg.impl {
	      TB_SYS::CommPrim_Source_Text => "Out";
		};
	properties 
		Dispatch_Protocol => Periodic;
		Period => 1 ms;
		Source_Text => ("user_code/user_client.c", "user_code/includes/client1/user_client.h");
	    TB_SYS::Compute_Entrypoint_Source_Text => ("create_msg");
	   	Priority => 10;
	    Stack_Size => 256 bytes;
	    TB_SYS::Thread_Type => Active ;
	    Compute_Execution_Time => 10 us .. 50 us;
	    TB_SYS::Sends_Events_To => "{{1 out0}}";
end client1; 

thread client2
	features
		in0 : in event data port msg.impl {
	      TB_SYS::Compute_Entrypoint_Source_Text => ("In");
		};
		out0 : out event data port msg.impl {
	      TB_SYS::CommPrim_Source_Text => "Out";	
		};
	properties 
		Dispatch_Protocol => Periodic;
		Period => 2 ms;
		Source_Text => ("user_code/user_client.c", "user_code/includes/client2/user_client.h");
	    TB_SYS::Compute_Entrypoint_Source_Text => ("create_msg");
	   	Priority => 10;
	    Stack_Size => 256 bytes;
	    TB_SYS::Thread_Type => Active ;
	    Compute_Execution_Time => 10 us .. 50 us;
	    TB_SYS::Sends_Events_To => "{{1 out0}}";
end client2; 

thread client3
	features
		in0 : in event data port msg.impl {
	      TB_SYS::Compute_Entrypoint_Source_Text => ("In");
		};
		out0 : out event data port msg.impl {
	      TB_SYS::CommPrim_Source_Text => "Out";			
		};
	properties 
		Dispatch_Protocol => Periodic;
		Period => 4 ms;
		Source_Text => ("user_code/user_client.c", "user_code/includes/client3/user_client.h");
	    TB_SYS::Compute_Entrypoint_Source_Text => ("create_msg");
	   	Priority => 10;
	    Stack_Size => 256 bytes;
	    TB_SYS::Thread_Type => Active ;
	    Compute_Execution_Time => 10 us .. 50 us;
	    TB_SYS::Sends_Events_To => "{{1 out0}}";
end client3; 

process proc

end proc;

process implementation proc.Impl
	subcomponents
		c1: thread client1;
		c2: thread client2;
		c3: thread client3;
		s: thread switch;
	connections
		c1_to_s : port c1.out0 -> s.in1;
		c2_to_s : port c2.out0 -> s.in2;
		c3_to_s : port c3.out0 -> s.in3;
		s_to_c1 : port s.out1 -> c1.in0;
		s_to_c2 : port s.out2 -> c2.in0;
		s_to_c3 : port s.out3 -> c3.in0;

end proc.Impl;

system switchbasedcomm
end switchbasedcomm;

system implementation switchbasedcomm.impl
	subcomponents
		tl: process proc.Impl;
	properties
		TB_SYS::OS => CAmkES;
		TB_SYS::HW => QEMU;
end switchbasedcomm.impl;

end SwitchBasedComm;