-- AADL Test RPC 1: active -> passive threads using scalar argument RPC.

package test_rpc_native
public 
   with Base_Types;
   with TB_SYS;   
   with Data_Model;


data a_struct
  properties
    Data_Model::Data_Representation => Struct;
end a_struct;

data implementation a_struct.impl
  subcomponents
    field1 : data Base_Types::Float;
    field2 : data Base_Types::Unsigned_32;
end a_struct.impl;

subprogram add_two_numbers
features
	A: in parameter a_struct.impl;
	B: in parameter Base_Types::Unsigned_32;
	result: out parameter Base_Types::Unsigned_32;
end add_two_numbers;

subprogram subtract_two_numbers
features
	A: in parameter Base_Types::Unsigned_32 {
		TB_SYS::By_Reference => true;
	};
	B: in parameter Base_Types::Unsigned_32;
	result: out parameter a_struct.impl;
end subtract_two_numbers;

subprogram group add_subtract_interface
features
	add: provides subprogram access add_two_numbers;
	subtract: provides subprogram access subtract_two_numbers;  
end add_subtract_interface;

subprogram group ext_interface
	properties
		TB_SYS::Is_External => true;
		TB_SYS::CommPrim_Source_Header => "ext_interface_foo.idl4";
end ext_interface;

-- Example of a periodically dispatched "Active" thread.   
thread sender
	features
		add_subtract: requires subprogram group access add_subtract_interface ;
      t1: requires subprogram group access ext_interface ;
	
	properties 
	    Dispatch_Protocol => Periodic;
	    TB_SYS::Thread_Type => Active ;
	    Period => 250 ms;
		Source_Text => ("user_code/user_sender.c");
	    TB_SYS::Compute_Entrypoint_Source_Text => ("periodic_ping");
	    Priority => 10;
	    Stack_Size => 16384 bytes;
	    Compute_Execution_Time => 10 us .. 50 us;
	    TB_SYS::Sends_Events_To => "{{1 Output1}}";
end sender ; 

-- Example of a passive thread providing an RPC interface  
thread receiver
	features
		add_subtract: provides subprogram group access add_subtract_interface; 
      t1: provides subprogram group access ext_interface ;
		
	properties 
	    Dispatch_Protocol => Sporadic;
	    TB_SYS::Thread_Type => Active ;
       Priority => 50;
       Period => 100 ms;
       Stack_Size => 16384 bytes;
	    Source_Text => ("user_code/user_receiver.c");
	    Compute_Execution_Time => 10 us .. 50 us;
	    TB_SYS::Sends_Events_To => "{{}}";
end receiver ; 

process proc

end proc;

process implementation proc.Impl
	subcomponents
		s: thread sender;
		r: thread receiver;
	connections
		s_to_r : subprogram group access s.add_subtract -> r.add_subtract;
      s_to_r2 : subprogram group access s.t1 -> r.t1;
end proc.Impl;

system test_rpc_native
end test_rpc_native;


processor main     
end main;

processor implementation main.camkes
   properties
      TB_SYS::OS => camkes;
      TB_SYS::HW => QEMU;
end main.camkes;

processor implementation main.linux
   properties
      TB_SYS::OS => linux;
      TB_SYS::HW => X86;
end main.linux;

processor implementation main.vxworks
   properties
      TB_SYS::OS => vxworks;
      TB_SYS::HW => x86;
end main.vxworks;

processor implementation main.echronos
   properties
      TB_SYS::OS => echronos;
      TB_SYS::HW => pixhawk;
end main.echronos;

system test
end test;

system implementation test.camkes
   subcomponents
      tl: process proc.Impl;
      toplevel: processor main.camkes;
   properties
      actual_processor_binding => (reference (toplevel)) applies to tl;     
end test.camkes;

system implementation test.echronos
   subcomponents
      tl: process proc.Impl;
      toplevel: processor main.echronos;
   properties
      actual_processor_binding => (reference (toplevel)) applies to tl;     
end test.echronos;

system implementation test.vxworks
   subcomponents
      tl: process proc.Impl;
      toplevel: processor main.vxworks;
   properties
      actual_processor_binding => (reference (toplevel)) applies to tl;     
end test.vxworks;

system implementation test.linux
   subcomponents
      tl: process proc.Impl;
      toplevel: processor main.linux;
   properties
      actual_processor_binding => (reference (toplevel)) applies to tl;     
end test.linux;

end test_rpc_native;