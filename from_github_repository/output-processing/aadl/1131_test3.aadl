-- AADL Test 3: active -> passive threads using array send. 

package test3
public 
   with Base_Types;
   with TB_SYS;   
   with Data_Model;

data a_array
  
end a_array;


data implementation a_array.impl
  properties
    Data_Model::Data_Representation => Array;
    Data_Model::Base_Type => (classifier (Base_Types::Unsigned_32));
    Data_Model::Dimension => (4);
end a_array.impl;

--data a_struct_wrapper
--  properties
--    Data_Model::Data_Representation => Struct;
--end a_struct_wrapper;
--
--data implementation a_struct_wrapper.impl
--  subcomponents
--    f : data a_array.impl;
--end a_struct_wrapper.impl;

-- Example of a periodically dispatched "Active" thread.   
thread sender
	features
		Output1: out event data port a_array.impl {
	      TB_SYS::CommPrim_Source_Text => "ping_Output1";			
		};
	
	properties 
	    Dispatch_Protocol => Periodic;
	    Period => 1000 ms;
		Source_Text => ("user_code/user_sender.c");
	    TB_SYS::Compute_Entrypoint_Source_Text => ("periodic_ping");
	    Priority => 10;
	    Stack_Size => 256 bytes;
	    TB_SYS::Thread_Type => Active ;
	    Compute_Execution_Time => 10 us .. 50 us;
	    TB_SYS::Sends_Events_To => "{{1 Output1}}";
end sender ; 

-- Example of a periodically dispatched "Active" thread.   
thread receiver
	features
		Input1: in event data port a_array.impl {
	      TB_SYS::Compute_Entrypoint_Source_Text => ("ping_received");
	      Source_Text => ("user_code/user_receiver.c");
		}; 
		
	properties 
	    Dispatch_Protocol => Aperiodic;
	    TB_SYS::Thread_Type => Passive ;
	    Compute_Execution_Time => 10 us .. 50 us;
	    TB_SYS::Sends_Events_To => "{{}}";
end receiver ; 

process proc

end proc;

process implementation proc.Impl
	subcomponents
		s: thread sender;
		r: thread receiver;
	connections
		s_to_r : port s.Output1 -> r.Input1;
end proc.Impl;

system test
end test;

system implementation test.camkes
	subcomponents
		tl: process proc.Impl;
	properties
		TB_SYS::OS => CAmkES;
		TB_SYS::HW => QEMU;
end test.camkes;

system implementation test.echronos
	subcomponents
		tl: process proc.Impl;
	properties
		TB_SYS::OS => echronos;
		TB_SYS::HW => QEMU;
end test.echronos;

system implementation test.vxworks
	subcomponents
		tl: process proc.Impl;
	properties
		TB_SYS::OS => VxWorks;
		TB_SYS::HW => QEMU;
end test.vxworks;

end test3;