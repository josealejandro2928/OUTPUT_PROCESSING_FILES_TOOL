package onepart_blackboard

public


with Data_Model;
with ARINC653;
with base_types;

virtual bus security_layer
end security_layer;


virtual processor partition
end partition;

virtual processor implementation partition.impl
end partition.impl;

processor module
end module;

processor implementation module.impl
subcomponents
   part1 : virtual processor partition.impl;
properties
   ARINC653::Module_Major_Frame => 1000ms;
  	ARINC653::Module_Schedule => 
	    ( [Partition => reference (part1);
	      Duration  => 10 ms;
	      Periodic_Processing_Start => false;]
	    );
end module.impl;

process myprocess
end myprocess;

process implementation myprocess.impl1
subcomponents
   prod : thread producer.impl;
   recv : thread consumer.impl;
connections
	c0 : port prod.dataout -> recv.datain;
end myprocess.impl1;


thread producer
features
	dataout : out data port base_types::unsigned_8;
end producer;

thread implementation producer.impl
calls 
   call1 : { pspg : subprogram producer_spg;};
connections
	c0 : parameter pspg.dataout -> dataout;
properties
   Priority => 1;
   dispatch_protocol => periodic;
   period            => 1000ms;
   deadline          => 500ms;
   compute_execution_time => 0ms .. 1ms;
   Code_Size  => 4 Kbyte;
   Stack_Size => 30 Kbyte;
   Data_Size  => 4 Kbyte;
end producer.impl;

thread consumer
features
	datain : in data port base_types::unsigned_8;
end consumer;

thread implementation consumer.impl
calls 
   call1 : { pspg : subprogram consumer_spg;};
connections
	c0 : parameter datain -> pspg.datain;
properties
   Priority => 1;
   dispatch_protocol => periodic;
   period            => 1000ms;
   deadline          => 500ms; 
   compute_execution_time => 0ms .. 1ms;
   Code_Size  => 4 Kbyte;
   Stack_Size => 30 Kbyte;
   Data_Size  => 4 Kbyte;
end consumer.impl;



subprogram producer_spg
features
	dataout : out parameter base_types::unsigned_8;
properties
   source_name => "user_producer";
   source_language => (C);
   Source_Text => ("../../../hello1.o");
   Code_Size  => 2 Kbyte;
   Data_Size  => 2 Kbyte;
end producer_spg;

subprogram consumer_spg
features
	datain : in parameter base_types::unsigned_8;
properties
   source_name => "user_consumer";
   source_language => (C);
   Source_Text => ("../../../hello1.o");
   Code_Size  => 2 Kbyte;
   Data_Size  => 2 Kbyte;
end consumer_spg;


memory partitionmemory
properties
   Byte_Count => 80000;
   ARINC653::Memory_Type => (code_memory);
end partitionmemory;

memory mainmemory
end mainmemory;

memory implementation mainmemory.impl
subcomponents
   part1: memory partitionmemory 
               {ARINC653::Memory_Type => (code_memory);};
end mainmemory.impl;



system node
end node;

system implementation node.impl
subcomponents
   cpu   : processor module.impl;
   part1 : process myprocess.impl1;
   mem : memory mainmemory.impl;
properties
   Actual_Processor_Binding => (reference (cpu.part1)) applies to part1;
   actual_memory_binding =>
      (reference (mem.part1)) applies to part1;
end node.impl;


end onepart_blackboard;
