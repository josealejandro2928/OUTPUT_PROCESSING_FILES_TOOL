package Integer_Toy
public 
   with Base_Types;
   
   annex resolute {**
     print_conns(sys : component) <=
       ** "the component " sys " has the following connections" **
         forall(c : connections(sys)) . print(c)
       
     print(c : connection) <=
       ** c **
         true
   **};
   
 system conn_test
 	features
 		feat0 : in data port Base_Types::Integer;
 		feat1 : out data port Base_Types::Integer;
 end conn_test;
 
 system implementation conn_test.i
 	subcomponents
 		feat_data : data Base_Types::Integer;
 		subme: system sub;
 	connections
 		conn0 : port feat0 -> feat_data;
 		conn1: port feat_data -> feat1;
 		conn2: port subme.outp -> feat1;
 		conn3: port subme.outp -> feat_data;
    annex resolute {**
    	prove print_conns(this)
    **};
 end conn_test.i;
 
 system sub
 	features
 		outp: out data port Base_Types::Integer;
 end sub;
	
end Integer_Toy;
