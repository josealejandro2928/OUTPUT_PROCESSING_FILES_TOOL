-- AADL Document autogenerated by Ivory.Language.AADL

package tower_example_signals
public
  with SMACCM_SYS;
  with fooBarTypes;
  with Base_Types;

thread fooBarSinkTask_24
  features
    barSink: in event data port fooBarTypes::bar_state.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_fooBarSinkTask_24.h";
      SMACCM_SYS::CommPrim_Source_Text => "receiveFromTask_fooBarSinkTask_24_chan1_28";
    };
    fooSink: in data port fooBarTypes::foo_state.impl {
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_fooBarSinkTask_24.h";
      SMACCM_SYS::CommPrim_Source_Text => "read_fooBarSinkTask_24_dataport0_25";
    };
  properties
    SMACCM_SYS::Dispatch => "EventLoop";
    Source_Text => "tower_task_usercode_fooBarSinkTask_24.c";
    -- barSink event port handler eventhandler_fooBarSinkTask_24_chan1_31
end fooBarSinkTask_24;


thread barSourceTask_13
  features
    barSource: out event data port fooBarTypes::bar_state.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_barSourceTask_13.h";
      SMACCM_SYS::CommPrim_Source_Text => "emitFromTask_barSourceTask_13_chan1_14";
    };
    signalCh: in event data port Base_Types::Unsigned_8 {
      Queue_Size => 2;
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_barSourceTask_13.h";
      SMACCM_SYS::CommPrim_Source_Text => "receiveFromTask_barSourceTask_13_chan2_20";
	  SMACCM_SYS::Compute_Entrypoint_Source_Text => ("exec_signalCh_1", "exec_signalCh_2");
    };
  properties
    SMACCM_SYS::Dispatch => "EventLoop";
    Source_Text => "tower_task_usercode_barSourceTask_13.c";
    -- signalCh event port handler eventhandler_barSourceTask_13_chan2_23
    -- periodic (125ms) event handler eventhandler_barSourceTask_13_per125_19
end barSourceTask_13;


thread fooSourceTask_3
  features
    fooSource: out data port fooBarTypes::foo_state.impl {
      SMACCM_SYS::CommPrim_Source_Header => "tower_task_loop_fooSourceTask_3.h";
      SMACCM_SYS::CommPrim_Source_Text => "write_fooSourceTask_3_dataport0_4";
    };
  properties
    SMACCM_SYS::Dispatch => "EventLoop";
    Source_Text => "tower_task_usercode_fooSourceTask_3.c";
    -- periodic (250ms) event handler eventhandler_fooSourceTask_3_per250_9
end fooSourceTask_3;


thread someSignal_10
  features
    someChan: out event data port Base_Types::Unsigned_8 {
      Queue_Size => 2;
      SMACCM_SYS::CommPrim_Source_Header => "tower_signal_comm_someSignal_10.h";
      SMACCM_SYS::CommPrim_Source_Text => "emitFromSig_someSignal_10_chan2_11";
    };
    barToISR: in event data port fooBarTypes::bar_state.impl {
      Queue_Size => 16;
      SMACCM_SYS::CommPrim_Source_Header => "tower_signal_comm_someSignal_10.h";
      SMACCM_SYS::CommPrim_Source_Text => "receiveFromSig_someSignal_10_chan1_12";
    };
  properties
    SMACCM_SYS::Dispatch => "ISR";
    Source_Text => "tower_signal_usercode_someSignal_10.c";
    SMACCM_SYS::Signal_Name => "isr_123";
end someSignal_10;


process tower_example_signals_process
  
end tower_example_signals_process;


process tower_example_signals_process.impl
  subcomponents
    fooBarSinkTask_24_inst : thread fooBarSinkTask_24;
    barSourceTask_13_inst : thread barSourceTask_13;
    fooSourceTask_3_inst : thread fooSourceTask_3;
    someSignal_10_inst : thread someSignal_10;
  connections
    port barSourceTask_13_inst.barSource -> fooBarSinkTask_24_inst.barSink;
    port barSourceTask_13_inst.barSource -> someSignal_10_inst.barToISR;
    port someSignal_10_inst.someChan -> barSourceTask_13_inst.signalCh;
    port fooSourceTask_3_inst.fooSource -> fooBarSinkTask_24_inst.fooSink;
end tower_example_signals_process.impl;



end tower_example_signals;