package Should_FailAGREE_When_AllGuaranteesInHierachyPresent
public
	with Base_Types;
    
    system Base
        features
            A : out data port Base_Types::Integer;
        annex agree {**
            guarantee A_is_zero "A = 0" : A = 0;
        **};
    end Base;
    
    system implementation Base.i
    end Base.i;
    
    system Subclass extends Base
    	features
    		B : out data port Base_Types::Integer;
        annex agree {**
            guarantee B_is_A_plus_1 "B = A + 1" : B = A + 1;
        **};
    end Subclass;
    
    system implementation Subclass.i extends Base.i
    end Subclass.i;

    system Subsubclass extends Subclass
    	features
    		C : out data port Base_Types::Integer;
    	annex agree {**
       	    guarantee C_is_B_plus_1 "C = B + 1" : C = B + 1;
    	**};
    end Subsubclass;

    system implementation Subsubclass.i extends Subclass.i
        annex agree {**
            assign A = 0;
            assign B = 3;
            assign C = 4;
        **};
    end Subsubclass.i;
    
end Should_FailAGREE_When_AllGuaranteesInHierachyPresent;