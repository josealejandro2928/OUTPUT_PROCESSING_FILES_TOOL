----------------------------------------------
--  IoT example
--       Julien Delange <jdelange@sei.cmu.edu>
--
-- The iot::sap_node::software package contains
-- the software executed by the arduino. The
-- arduino executes a single thread, this is
-- why we represent the software with a single
-- thread component contained in a process.
----------------------------------------------

package iot::sap_node::software
public
	with iot::common::datatypes;
	
	thread control_loop
	features
		activate_led : out data port iot::common::datatypes::boolean;
		activate_door : out data port iot::common::datatypes::boolean;
		sensor_door : in data port iot::common::datatypes::boolean;
		sensor_temperature : in data port iot::common::datatypes::temperature;
		sensor_proximity : in data port iot::common::datatypes::distance;
		alert            : out data port iot::common::datatypes::boolean;
		internal_request : in event data port iot::common::datatypes::internal_request;
		internal_reply : out event data port iot::common::datatypes::internal_reply;
	flows
		intreply            : flow source internal_reply;
	end control_loop;
	
	process pr_control_loop
	features
		activate_led : out data port iot::common::datatypes::boolean;
		activate_door : out data port iot::common::datatypes::boolean;
		sensor_door : in data port iot::common::datatypes::boolean;
		sensor_temperature : in data port iot::common::datatypes::temperature;
		sensor_proximity : in data port iot::common::datatypes::distance;
		alert            : out data port iot::common::datatypes::boolean;
		internal_request : in event data port iot::common::datatypes::internal_request;
		internal_reply : out event data port iot::common::datatypes::internal_reply;
	flows
		door_activation     : flow path internal_request -> activate_door;
		led_activation      : flow path internal_request -> activate_led;
		door_detection      : flow path sensor_door -> internal_reply;
		temp_detection      : flow path sensor_temperature -> internal_reply;
		proximity_detection : flow path sensor_proximity -> internal_reply;
		intreply            : flow source internal_reply;
	annex EMV2 {**
		use types errorlibrary;
		
		error propagations
			sensor_proximity    : in propagation {BadValue,ServiceOmission};
			sensor_temperature  : in propagation {BadValue,ServiceOmission};
			internal_reply      : out propagation {ServiceError};
		flows
			sensor_proximity_badvalue : error path sensor_proximity{BadValue} -> internal_reply{ServiceError};
			sensor_proximity_omission : error path sensor_proximity{ServiceOmission} -> internal_reply{ServiceError};
			sensor_temperature_badvalue : error path sensor_temperature{BadValue} -> internal_reply{ServiceError};
			sensor_temperature_omission : error path sensor_temperature{ServiceOmission} -> internal_reply{ServiceError};
		end propagations;
		
	**};
	end pr_control_loop;

	process implementation pr_control_loop.i
	subcomponents
		thr : thread control_loop;
	connections
		c0 : port  	thr.activate_led 	-> activate_led;
		c1 : port  	thr.activate_door 	-> activate_door;
		c2 : port  	thr.alert 			-> alert;
		c3 : port  	sensor_door 			-> thr.sensor_door;
		c4 : port  	sensor_temperature 	-> thr.sensor_temperature;
		c5 : port  	sensor_proximity 	-> thr.sensor_proximity;
		c6 : port 	thr.internal_reply -> internal_reply;
		c7 : port 	internal_request -> thr.internal_request;
	flows
		intreply : flow source thr.intreply -> c6 -> internal_reply;
	end pr_control_loop.i;
end iot::sap_node::software;
