--------------------------------------------------------
--! File generated by asn2aadl v2.2-rb072508: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:True:
--! InputASN1FileChecksum:ee8a7e01f29874c0d50f437d5abb9599:/home/taste/tool-inst/share/taste-types/taste-types.asn:
--! InputASN1FileChecksum:99e1f09759aa9f2926ec6dc3cf0090af:DataView.acn:
--! InputASN1FileChecksum:0b1e4da590eecd37f298fefa98b9c18e:DataView.asn:
--------------------------------------------------------

package DataView

public

  with Data_Model;
  with Taste;
  with Base_Types;
  with Deployment;
DATA Simulink_Tunable_Parameter
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Simulink-Tunable-Parameter";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Simulink_Tunable_Parameter;
DATA Timer
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Timer";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Timer;
DATA Taste_directive
PROPERTIES
   TASTE::Ada_Package_Name => "TASTE_Directives";
   Type_Source_Name => "Taste-directive";
   Deployment::ASN1_Module_Name => "TASTE-Directives";
   TASTE::Forbid_in_PI => true;
END Taste_directive;

data Stream_Element_Buffer
    -- Root type for buffer elements
properties
    Data_Model::Data_Representation => Character;
end Stream_Element_Buffer;
DATA Color
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Color";
    TASTE::Position_In_File => [ line => 15 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END Color;

DATA IMPLEMENTATION Color.impl
END Color.impl;

DATA Color_Buffer_Max
END Color_Buffer_Max;

DATA IMPLEMENTATION Color_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Color
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Color_Buffer_Max.impl;

DATA Color_Buffer
END Color_Buffer;

DATA IMPLEMENTATION Color_Buffer.impl
    -- Buffer to hold a marshalled data of type Color
SUBCOMPONENTS
    Buffer : data Color_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Color_Buffer.impl;

DATA Coordinates
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Coordinates";
    TASTE::Position_In_File => [ line => 9 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Coordinates;

DATA IMPLEMENTATION Coordinates.impl
END Coordinates.impl;

DATA Coordinates_Buffer_Max
END Coordinates_Buffer_Max;

DATA IMPLEMENTATION Coordinates_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Coordinates
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Coordinates_Buffer_Max.impl;

DATA Coordinates_Buffer
END Coordinates_Buffer;

DATA IMPLEMENTATION Coordinates_Buffer.impl
    -- Buffer to hold a marshalled data of type Coordinates
SUBCOMPONENTS
    Buffer : data Coordinates_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Coordinates_Buffer.impl;

DATA Grid
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Grid";
    TASTE::Position_In_File => [ line => 38 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Grid;

DATA IMPLEMENTATION Grid.impl
END Grid.impl;

DATA Grid_Buffer_Max
END Grid_Buffer_Max;

DATA IMPLEMENTATION Grid_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Grid
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Grid_Buffer_Max.impl;

DATA Grid_Buffer
END Grid_Buffer;

DATA IMPLEMENTATION Grid_Buffer.impl
    -- Buffer to hold a marshalled data of type Grid
SUBCOMPONENTS
    Buffer : data Grid_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Grid_Buffer.impl;

DATA Line
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Line";
    TASTE::Position_In_File => [ line => 37 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Line;

DATA IMPLEMENTATION Line.impl
END Line.impl;

DATA Line_Buffer_Max
END Line_Buffer_Max;

DATA IMPLEMENTATION Line_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Line
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Line_Buffer_Max.impl;

DATA Line_Buffer
END Line_Buffer;

DATA IMPLEMENTATION Line_Buffer.impl
    -- Buffer to hold a marshalled data of type Line
SUBCOMPONENTS
    Buffer : data Line_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Line_Buffer.impl;

DATA Move_Command
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Move-Command";
    TASTE::Position_In_File => [ line => 32 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END Move_Command;

DATA IMPLEMENTATION Move_Command.impl
END Move_Command.impl;

DATA Move_Command_Buffer_Max
END Move_Command_Buffer_Max;

DATA IMPLEMENTATION Move_Command_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Move_Command
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Move_Command_Buffer_Max.impl;

DATA Move_Command_Buffer
END Move_Command_Buffer;

DATA IMPLEMENTATION Move_Command_Buffer.impl
    -- Buffer to hold a marshalled data of type Move_Command
SUBCOMPONENTS
    Buffer : data Move_Command_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Move_Command_Buffer.impl;

DATA Move_Status
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Move-Status";
    TASTE::Position_In_File => [ line => 30 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aENUMERATED;
END Move_Status;

DATA IMPLEMENTATION Move_Status.impl
END Move_Status.impl;

DATA Move_Status_Buffer_Max
END Move_Status_Buffer_Max;

DATA IMPLEMENTATION Move_Status_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Move_Status
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Move_Status_Buffer_Max.impl;

DATA Move_Status_Buffer
END Move_Status_Buffer;

DATA IMPLEMENTATION Move_Status_Buffer.impl
    -- Buffer to hold a marshalled data of type Move_Status
SUBCOMPONENTS
    Buffer : data Move_Status_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Move_Status_Buffer.impl;

DATA Pixels
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Pixels";
    TASTE::Position_In_File => [ line => 24 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Pixels;

DATA IMPLEMENTATION Pixels.impl
END Pixels.impl;

DATA Pixels_Buffer_Max
END Pixels_Buffer_Max;

DATA IMPLEMENTATION Pixels_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Pixels
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Pixels_Buffer_Max.impl;

DATA Pixels_Buffer
END Pixels_Buffer;

DATA IMPLEMENTATION Pixels_Buffer.impl
    -- Buffer to hold a marshalled data of type Pixels
SUBCOMPONENTS
    Buffer : data Pixels_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Pixels_Buffer.impl;

DATA Pixels_Line
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Pixels-Line";
    TASTE::Position_In_File => [ line => 23 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCEOF;
END Pixels_Line;

DATA IMPLEMENTATION Pixels_Line.impl
END Pixels_Line.impl;

DATA Pixels_Line_Buffer_Max
END Pixels_Line_Buffer_Max;

DATA IMPLEMENTATION Pixels_Line_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Pixels_Line
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Pixels_Line_Buffer_Max.impl;

DATA Pixels_Line_Buffer
END Pixels_Line_Buffer;

DATA IMPLEMENTATION Pixels_Line_Buffer.impl
    -- Buffer to hold a marshalled data of type Pixels_Line
SUBCOMPONENTS
    Buffer : data Pixels_Line_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Pixels_Line_Buffer.impl;

DATA Sprite
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Sprite";
    TASTE::Position_In_File => [ line => 25 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aSEQUENCE;
END Sprite;

DATA IMPLEMENTATION Sprite.impl
END Sprite.impl;

DATA Sprite_Buffer_Max
END Sprite_Buffer_Max;

DATA IMPLEMENTATION Sprite_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Sprite
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Sprite_Buffer_Max.impl;

DATA Sprite_Buffer
END Sprite_Buffer;

DATA IMPLEMENTATION Sprite_Buffer.impl
    -- Buffer to hold a marshalled data of type Sprite
SUBCOMPONENTS
    Buffer : data Sprite_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Sprite_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Boolean_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 6 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_Int8_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt32_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("/home/taste/tool-inst/share/taste-types/taste-types.asn");
    TASTE::Ada_Package_Name => "TASTE_BasicTypes";
    Deployment::ASN1_Module_Name => "TASTE-BasicTypes";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END T_UInt8_Buffer.impl;

DATA Timer_Duration
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("DataView.asn");
    TASTE::EncodingDefinitionFile => classifier(DataView::ACN_TETRIS_DATAVIEW);
    TASTE::Ada_Package_Name => "TETRIS_DATAVIEW";
    Deployment::ASN1_Module_Name => "TETRIS-DATAVIEW";
    Source_Language => (ASN1);
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Timer-Duration";
    TASTE::Position_In_File => [ line => 34 ; column => 1 ; ];
    -- what kind of type is this?
    TASTE::ASN1_Basic_Type =>aINTEGER;
END Timer_Duration;

DATA IMPLEMENTATION Timer_Duration.impl
END Timer_Duration.impl;

DATA Timer_Duration_Buffer_Max
END Timer_Duration_Buffer_Max;

DATA IMPLEMENTATION Timer_Duration_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Timer_Duration
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Base_Type => (classifier (DataView::Stream_Element_Buffer));
END Timer_Duration_Buffer_Max.impl;

DATA Timer_Duration_Buffer
END Timer_Duration_Buffer;

DATA IMPLEMENTATION Timer_Duration_Buffer.impl
    -- Buffer to hold a marshalled data of type Timer_Duration
SUBCOMPONENTS
    Buffer : data Timer_Duration_Buffer_Max.impl;
    Length : data Base_Types::Unsigned_32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
END Timer_Duration_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   Color : DATA Color.impl;
   Coordinates : DATA Coordinates.impl;
   Grid : DATA Grid.impl;
   Line : DATA Line.impl;
   Move_Command : DATA Move_Command.impl;
   Move_Status : DATA Move_Status.impl;
   Pixels : DATA Pixels.impl;
   Pixels_Line : DATA Pixels_Line.impl;
   Sprite : DATA Sprite.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt8 : DATA T_UInt8.impl;
   Timer_Duration : DATA Timer_Duration.impl;
END Taste_DataView.others;
DATA ACN_TETRIS_DATAVIEW
PROPERTIES
    Source_Text => ("DataView.acn");
    Source_Language => (ACN);
END ACN_TETRIS_DATAVIEW;

end DataView;
