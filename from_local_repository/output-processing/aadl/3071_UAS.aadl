package UAS
public
  with UAV;
  with DATATYPES;
 
  system UAS
    annex agree {**
    	guarantee "empty" : true;
    **};
  end UAS;
  
  system implementation UAS.Impl
    subcomponents
      RF_915Mhz_Spectrum: bus RF_Spectrum.RF_915MHz;
      RF_2_4Ghz_Spectrum: bus RF_Spectrum.RF_2_4GHz;
      UAV: system UAV::UAV.Impl;
      GS: system Ground_Station.Impl;
      RC: device RC_Controller; 

    connections
      conn0: bus access UAV.radio_access_915Mhz <-> RF_915Mhz_Spectrum;
      conn1: bus access UAV.radio_access_2_4Ghz <-> RF_2_4Ghz_Spectrum;
      conn2: bus access RC.radio_access <-> RF_2_4Ghz_Spectrum;
      conn3: bus access GS.radio_access <-> RF_915Mhz_Spectrum;
      
      conn4: port GS.mavlink <-> UAV.mavlink;
      conn5: port RC.flight_control_commands -> UAV.flight_control_commands;
      
    annex resolute {**
    	--prove all_features_bound()
    	--prove print_all_unimplemented()
    	prove all_outgoing_through_trusted(this.GS)
    **};
      
  end UAS.Impl;

  system Ground_Station
    features
      radio_access: requires bus access RF_Spectrum.RF_915MHz;
      mavlink: in out data port DATATYPES::EncryptMAVLink;
  end Ground_Station;
  
  system implementation Ground_Station.Impl
  end Ground_Station.Impl;

  bus RF_Spectrum
  end RF_Spectrum;
  
  bus implementation RF_Spectrum.RF_915MHz
  end RF_Spectrum.RF_915MHz;
  
  bus implementation RF_Spectrum.RF_2_4GHz
  end RF_Spectrum.RF_2_4GHz;

  device RC_Controller
    features
      flight_control_commands: out data port DATATYPES::Flight_Control_Commands;
      radio_access: requires bus access RF_Spectrum.RF_2_4GHz;
  end RC_Controller;
end UAS;