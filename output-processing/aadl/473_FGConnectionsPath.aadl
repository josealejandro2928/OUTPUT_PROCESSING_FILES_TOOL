package FGConnectionsPath
public
    feature group FG
    	features
	    	x_in1: in data port;
	    	x_in2: in data port;
	    	x_out1: out data port;
	    	x_out2: out data port;
    end FG;

	feature group FG_inverse inverse of FG
	end FG_inverse;

    subprogram sub
        features
            p1: in parameter;
            p2: out parameter;
        flows
            subPath: flow path p1 -> p2;
    end sub;
    
    thread th
    	features
    		fg1: feature group FG;
    		fg2: feature group FG_inverse;
    	flows
    		fpath: flow path fg1 -> fg2;
    end th;
    
    thread implementation th.simple
    end th.simple;
    
    thread implementation th.specific
    	flows
    		fpath: flow path fg1.x_in1 -> fg2.x_in2;
    end th.specific;
    
    thread implementation th.withCall_noFlowImpl
    	subcomponents
    		sub1: subprogram sub;
    	calls
    		normal: {
    			call1: subprogram sub1;
    		};
    	connections
    		c1: parameter fg1.x_in1 -> call1.p1;
    		c2: parameter call1.p2 -> fg2.x_in2;
    end th.withCall_noFlowImpl;
    
    thread implementation th.withCall_flowImpl extends th.withCall_noFlowImpl
   		flows
    		-- The point of this example is that this flow implementation should be ignored and the flow specification should be used instead during instantiation
    		fpath: flow path fg1.x_in1 -> c1 -> sub1.subPath -> c2 -> fg2.x_in2;
    end th.withCall_flowImpl;
    
    thread th2
    	features
    		-- out
    		fg1: feature group FG_inverse;
    		
    		-- in 
    		fg2: feature group FG;
    	flows
    		fsrc: flow source fg1;
    		fsnk: flow sink fg2;
    end th2;
    
    thread implementation th2.i
    	-- trivial
    end th2.i;
    
    process top
    end top;
    
    process implementation top.generic
        subcomponents
            t: thread th;
            q: thread th2.i;
        connections
            c1: feature group q.fg1 <-> t.fg1;
            c2: feature group t.fg2 <-> q.fg2;
        flows
            e2e: end to end flow q.fsrc -> c1 -> t.fpath -> c2 -> q.fsnk;
    end top.generic;
    
    process implementation top.simple extends top.generic
        subcomponents
            t: refined to thread th.simple;
    end top.simple;

    process implementation top.specific extends top.generic
        subcomponents
            t: refined to thread th.specific;
    end top.specific;

    process implementation top.withCall_noFlowImpl extends top.generic
        subcomponents
            t: refined to thread th.withCall_noFlowImpl;
    end top.withCall_noFlowImpl;

    process implementation top.withCall_flowImpl extends top.generic
        subcomponents
            t: refined to thread th.withCall_flowImpl;
    end top.withCall_flowImpl;
end FGConnectionsPath;
